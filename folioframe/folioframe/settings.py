"""
Django settings for folioframe project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
import sys
from pathlib import Path

# Version
APP_VERSION = "4.4.7"
# Build absolute paths inside project
BASE_DIR = Path(__file__).resolve().parent.parent
# Secret key
SECRET_KEY_PATH = os.path.join(BASE_DIR, 'envSecretKey.env')
with open(SECRET_KEY_PATH) as SECRET_KEY_FILE:
    SECRET_KEY = SECRET_KEY_FILE.read().strip()
# Debug
DEBUG = False
# Allowed urls
ALLOWED_HOSTS = [
    "127.0.0.1",
    "gabrieldigitprint.work",
]
# Installed Apps
INSTALLED_APPS = [
    'foliogate',
    'foliohome',
    'foliofin',
    'django_extensions',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
# Middleware Apps
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'folioframe.middleware.Block',
    'folioframe.middleware.Limit',
    'folioframe.middleware.Authenticate',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# Urls main library
ROOT_URLCONF = 'folioframe.urls'
# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
TEMPLATES[0]['OPTIONS']['context_processors'].append('folioframe.context_processors.version')
# Media
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#reCAPTCHA
RECAPTCHA_SITE_KEY = '6LeaZHQrAAAAANvtkYEp4PmM8Snsc2kJimiisXph'
RECAPTCHA_DEFAULT_ACTION = 'foliogate'
RECAPTCHA_SCORE_THRESHOLD = 0.8
RECAPTCHA_SECRET_KEY_PATH = os.path.join(BASE_DIR, 'envReCAPTCHASecretKey.env')
with open(RECAPTCHA_SECRET_KEY_PATH) as RECAPTCHA_SECRET_KEY_FILE:
    RECAPTCHA_SECRET_KEY = RECAPTCHA_SECRET_KEY_FILE.read().strip()
# WSGI & Gunicorn
WSGI_APPLICATION = 'folioframe.wsgi.application'
SECURE_SSL_REDIRECT = False # Reverse-Proxy Nginx configured to redirect all traffic to HTTPS
SECURE_HSTS_SECONDS = 60
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
CSRF_TRUSTED_ORIGINS = [
    "http://localhost",
    "http://127.0.0.1",
    "https://gabrieldigitprint.work",
]
CONN_MAX_AGE = 1
# Database
USE_SQLITE_FOR_TESTS = 'test' in sys.argv
if USE_SQLITE_FOR_TESTS:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'test_db.sqlite3'),
        }
    }
else:
    POSTGRESQL_USER_PATH = os.path.join(BASE_DIR, 'envPostgreSQLUser.env')
    with open(POSTGRESQL_USER_PATH) as POSTGRESQL_USER_FILE:
        POSTGRESQL_USER = POSTGRESQL_USER_FILE.read().strip()
    POSTGRESQL_PASSWORD_PATH = os.path.join(BASE_DIR, 'envPostgreSQLPassword.env')
    with open(POSTGRESQL_PASSWORD_PATH) as POSTGRESQL_PASSWORD_FILE:
        POSTGRESQL_PASSWORD = POSTGRESQL_PASSWORD_FILE.read().strip()
    POSTGRESQL_HOST_PATH = os.path.join(BASE_DIR, 'envPostgreSQLHost.env')
    with open(POSTGRESQL_HOST_PATH) as POSTGRESQL_HOST_FILE:
        POSTGRESQL_HOST = POSTGRESQL_HOST_FILE.read().strip()
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'folioframe',
            'USER': POSTGRESQL_USER,
            'PASSWORD': POSTGRESQL_PASSWORD,
            'HOST': POSTGRESQL_HOST,
            'PORT': '5432',
        }
    }
# Password validation
AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]
# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True
# Static files & Nginx
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [BASE_DIR / 'static']
USE_X_FORWARDED_HOST = True
# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Contact
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER_PATH = os.path.join(BASE_DIR, 'envEmailHostUser.env')
with open(EMAIL_HOST_USER_PATH) as EMAIL_HOST_USER_FILE:
    EMAIL_HOST_USER = EMAIL_HOST_USER_FILE.read().strip()
EMAIL_HOST_PASSWORD_PATH = os.path.join(BASE_DIR, 'envEmailHostPassword.env')
with open(EMAIL_HOST_PASSWORD_PATH) as EMAIL_HOST_PASSWORD_FILE:
    EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD_FILE.read().strip()